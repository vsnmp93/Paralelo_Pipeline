Creando proyecto desde cero
1.- npm install cypress --save-dev
2.- npx cypress open (para probar si se creo bien)
3.- Borramos las dos carpetas de Integration (getting-started y advanced-examples)
4.- Comenzamos a crear los archivos js 
5.- Configuramos los archivos de cypress.json e index.js(support)
--------------------------------------------------------------------
5.- npx cypress run --record --key 1801959b-b6a0-4ca1-be3f-200f0ff77b46
6.- Creamos un archivo  para .gitignore :  es un archivo de texto que le dice a Git qué archivos o carpetas ignorar en un proyecto.
    .gitignore
    Ejemplo de archivos que podemos dejar dentro :
    node_modules/
    *.mp4
    *.jpg
7.- Luego de crear ese archivo vamos a consola para guardar cambios :
    git init
    git status
    git add .
    git s
    git commit -m "Iniciando proyecto de Paralelo"
8.- Vamos a GitHub y creamos un nuevo repositorio
    click en <> code
    Bajamos y encontraremos : or push an existing repository from teh command line
    copiamos y pegamos la primera línea la pegamos en la consola de vcode, luego la segunda y tercera.
    La segunda y tercera debemos cambiar la palabra margin  por master, quedaría así :
    git branch -M master
    git push -u origin master
    hacemos click nuevamente en <> code y veremos las carpetas creadas con éxito (deben ser las que estan en vcode).
9.- Comenzamos a integrar a Jenkins el proyecto o repositorio recién creado.
10.- Nos logueamos en Jenkins
11.- Vamos a consola y :
     git s
     git add .
     git commit -m "Cambio nuevo test" (en el caso de que se añadan nuevos archivoso cuando ya se añadan todos y esté listo el proyecto)
     y luego :
     git push
12.- Vamos a jenkins y hacemos clic en 1->Nueva Tarea 2-> ingresas el nombre del proyecto(puede ser el mismo del repositorio)
     3-> Crear un proyecto de estilo libre (puede variar en el caso de que sea un proyecto de trabajo real)
     4.->Escribimos la descripción de nuestro proyecto. 5-> Hacemos click en Git (Configurar el origen del código fuente).
     6-> Vamos a GitHub donde está abierto el repo y hacemos click en el botón verde 6->Code 7-> en HTTPS copiamos la url de abajo.
     8-> Lo pegamos en Repository URL (Jenkins).
     9-> En credentials 10->Add 11->username : vsnmp 12-> password : .......... 13->Add
     14-> Credentials seleccionamos el usuario creado (vsnmp) 15->(Fijarse que la rama sea master)
     16-> Por ahora vamos a ejecutar desde una línea de comandos de windows  16-> Ejecutar  17->Ejecutar un comando de windows
     18-> npm install (en el cuadro de texto, para que ejecute todos los paquetes del repo y lo instale)
     19-> Añadir un nuevo paso 20->Ejecutar un comando de windows 
     21-> Pegar la clave que nos dieron al inicio : npx cypress run --record --key 1801959b-b6a0-4ca1-be3f-200f0ff77b46
     22-> Guardar 
13.- Vas a tu panel de control y visualizarás el proyecto creado.
14.- Hcemos click en play del proyecto ubicado a mano derecha, para ver que todo corre bien.
15.- Vamos a mano izquierda y en Estado del ejecutor de construcciones 
     Hcemos click en Cypress_pipeline(o en el nombre del proyecto creado)
     hacemos click en la fecha que marca el proyecto y luego en -> Console Output (se revisa el estado)
     vamos a consola de vcode y escribimos :
     npx cypress open 
     vamos a cypress (web que nos lanza)
     luego a Runs y hacemos click en la última ejecución y revisamos nuestros test (dashboard)
16.-Creando nuestra máquina virtual (Agent)
     ->Panel de Control ->Administrador ->Administrar Jenkins -> Administrar Nodos ->Nuevo nodo -> Nombre del nodo : Agent2
     ->Permanent Agent ->Create ->of executors(número de máquinas que van a correr) : 5 -> Labels :  Agent2_1 Agent2_2 Agent2_3 Agent2_4 Agent2_5 (basado en los o of executors)
     ->Usar : Utilizar este nodo tanto como sea posible -> Availability : Keep this agent online as much as possible.
     ->Localización de herramientas ->Añadir Nombre->(Git) Default ->Directorio : C:\Program Files\Git\bin
     ->Añadir ->Nombre : (NodeJs) Node ->Directorio : C:\Program Files\nodejs ->Guardar
     En el caso de que el nodo quede con X, deben ir al nodo ->Configuraciones ->le das click en ese Warning (activar el botón TSP) y le dan en ->Guardar
     Descargas el agent.jar y lo copias en el disco duro y lo desconprimes.

17.-Generando el Archivo Jenkinsfile(Pipeline) ,Un pipeline Jenkins es un conjunto de plugins que soporta la implementación e integración de pipelines 
    (tuberías) de despliegue continuo en Jenkins.
    Un pipeline es un conjunto de instrucciones del proceso que siga una aplicación desde el repositorio de control de versiones hasta que
    llega a los usuarios.
    La definición de un pipeline Jenkins, se escribe en un fichero de texto (llamado Jenkinsfile) que se puede subir al repositorio junto con el resto del proyecto de software.
    ->Creamos un archivo en el proyecto -> Jenkinsfile -> y añadimos este código (cambiando algunos comandos y ruta) :
    pipeline {
    agent any
    tools {nodejs "node"}

    stage('Cypress Parallel Test Suite'){
        paralel{
            stage('Slave 1'){
                agent{
                    label "Agent2_1"
                }
                steps {
                    git url: 'https://github.com/vsnmp93/Paralelo_Pipeline.git'
                    bat 'npm install'
                    bat 'npm update'
                    bat 'npx cypress run --record --key 1801959b-b6a0-4ca1-be3f-200f0ff77b46'
                }
            }
        }
    }

    }
}
         Explicación :
           paralel{ = vas a hacer un ciclo Paralelo
           la máquina que vas a disparar : 
            stage('Slave 1'){
                agent{
                    label "Agent2_1"  = el agente que va a correr
                }
                steps {
                    git url: 'https://github.com/vsnmp93/Paralelo_Pipeline.git'  = el repositorio en el que vamos a trabajar y asi descarga la url
                    bat 'npm install'   = instala todo lo que necesites , cypress y librerias 
                    bat 'npm update'  = actualiza si es necesario
                    bat 'npx cypress run --record --key 1801959b-b6a0-4ca1-be3f-200f0ff77b46 --parallel' = le decimos a que proyecto debe ir y correr añadir el --parallel
                }

    En el caso de que sean mas agentes, se copian el agent anterior y se modifica el label.

18.- Creamos una nueva tarea :
     ->Nueva tarea -> nombre : Jenkinsfile_curso ->Pipeline ->Ok  -> Agregamos la descripción ->Pipeline definition 
     ->Pipeline script from SCM -> SCM : Git ->Repositories ->Repository URL (vamos al repositorio y en code copiamos la url)
     ->Credential : vsnmp.... ->Branch to build: */master -> ScriptPath : Jenkinsfile  , le diremos que mi script va a ser un archivo Jenkinsfile.
     ->Guardar
     Vamos al panel de control y vemos el archivo recién creado Jenkinsfile_curso .
     Revisar si el agent2 o agente está ok (corriendo) en ->Administrar Jenkins -> Administrar nodos (ahí se verán los agent)
     Actualizar nuestro git por consola (cambios y archivo nuevo creado de Jenkinsfile)
     -> git s
     -> git add .
     -> git commit -m "Agregando el archivo Jenkinsfile super importante Paralelos"
     -> git s
     -> git push
     -> git s
     -> Refrescamos el repositorio para ver los cambios
     


     

     
     





